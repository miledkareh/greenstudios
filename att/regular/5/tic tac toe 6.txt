#include <stdio.h>
#include<conio.h>
#include <windows.h>

//level1n
int level1n(int p2)
{int player = 0,x,y,c=0,i;
int winner = 0; 
int choice = 0; 
int row = 0; 
int column = 0; 
int line = 0; 
char board [3][3] = { 
{'1','2','3'}, 
{'4','5','6'}, 
{'7','8','9'} 
}; 

printf("You have X, I have O.\n\n");

printf("Board Positions:\n");

for (i = 0; i<9 && winner==0; i++) 
{ 
printf("\n\n"); 
printf(" %c | %c | %c\n", board[0][0], board[0][1], board[0][2]); 
printf("---|---|---\n"); 
printf(" %c | %c | %c\n", board[1][0], board[1][1], board[1][2]); 
printf("---|---|---\n"); 
printf(" %c | %c | %c\n", board[2][0], board[2][1], board[2][2]); 
player = i%2 + 1; 
do 
{ if(player==2)
	{printf("\n My turn...\n");

Sleep( 1500 );

for(x=0,c=0;x<3&&c==0;x++)
{for(y=0;y<3&&c==0;y++)
if(board[x][y]<'9')
{board[x][y]='O';
c++;}
}break;
}

printf("\nYour move:"); 
scanf("%d", &choice); 

row = --choice/3; 
column = choice%3; 

}	while(choice<0 || choice>9 || board [row][column]>'9');

if(player==1)board[row][column]='X';
if((board[0][0]==board[1][1] && board[0][0]==board[2][2]) || (board[0][2]==board[1][1] && board[0][2]==board[2][0])) 
	winner = player;
else for(line = 0; line <=2; line++) 
if((board[line][0]==board[line][1] && board[line][0]==board[line][2])|| (board[0][line]==board[1][line] && board[0][line]==board[2][line])) 
winner = player; 
}
	printf(" %c | %c | %c\n", board[0][0], board[0][1], board[0][2]); 
	printf("---|---|---\n"); 
	printf(" %c | %c | %c\n", board[1][0], board[1][1], board[1][2]); 
	printf("---|---|---\n"); 
	printf(" %c | %c | %c\n\n", board[2][0], board[2][1], board[2][2]); 

if(winner==0) 
	printf("*----------* DRAW! *----------*\n\n"); 

else if(player==1)
	printf("*----------* Congratulations, YOU WON! *----------*\n\n");

else
	printf("*----------* I WON! *----------*\n\n");

do{ 
	printf("Press '1' to play again, or '0' to quit.\n");
    scanf("%d",&x);
}while(x<0 || x>1);
return x;}


//Level 1
int Level1(int l1 , int n1)
{
int player = 0,l=0,p=0,x,y,z=0,c=0,i,f=0,m=0,k=0,v=0,r=0,e=0,q=0,t=0;
int winner = 0,s=0,w=0,g=0,j=0,u=0,c1; 
int choice = 0,choice1,y1; 
int line = 0; 
char board [100][100]={ };
int EndGame=1;
if(n1==3)
level1n(n1);
else{ 
printf("You have X, I have O.\n\n");

printf("Board Positions:\n");
for (i = 0,c1=0; i<n1*n1 && winner==0; i++) 
{ 
	printf("\n\n"); 
	for(x=0;x<n1;x++)
	{for(y=0;y<n1;y++,c1++)
		{printf(" %c |",board[x][y]);}printf("\n");
	for(y=0;y<n1;y++)
	printf("---|");
	printf("\n");
	}player = i%2 + 1; 


do 
{ if(player==2)
	{printf("\n\nMy move... \n");


if(i == 7)
{
	printf("I'm thinking, Please wait...\n");
	Sleep( 5000 ) ;
}

else
	Sleep( 2000 ) ;


	{for(x=0,c=0;x<n1&&c==0;x++)
		{for(y=0;y<n1&&c==0;y++)
			{if(board[x][y]!='X' && board[x][y]!='O')
				{board[x][y]='O';c++;}}}
c++;}
break;}				

do{printf("\nYour move: "); 
	printf("please enter ligne number: \n");
scanf("%d", &choice);}while(choice<0 || choice>n1-1);
do{	printf("please enter column number: ");
	scanf("%d",&choice1);}while(choice1<0 || choice1>n1-1);
}while(choice<0 || choice>n1-1 || board [choice][choice1]>'9');
if(player==1)board[choice][choice1]='X';
for(j=0,v=0;j<n1;j++,v++)
	{p=board[j][v];
	if(p==board[j][v])
		k++;}
		k--;
		if(k==n1)
winner = player;
else for(line = 0; line <n1&&w==0; line++)
		  {for(u=1,t=board[line][0],e=0;u<n1;u++)
		  	{
		  		if(t=='O' || t=='X')
		  	{if(t==board[line][u])
		  		e++;}}
				if(e==n1-1)
					w++;}
if(w!=0)						
winner = player;
else
{for(line = 0; line <n1&&w==0; line++)
		  {for(u=1,t=board[0][line],e=0;u<n1;u++)
		  	{
		  		if(t=='O' || t=='X')
		  	{if(t==board[u][line])
		  		e++;}}
				if(e==n1-1)
					w++;}
if(w!=0)						
winner = player;
}}
for(x=0;x<n1;x++)
	{for(y=0;y<n1;y++)
		{printf(" %c |",board[x][y]);}
		printf("\n");
		for(y=0;y<n1;y++)
	{printf("---|");}
	printf("\n");}

if(winner==0) 
	printf("*----------* DRAW! *----------*\n\n"); 

else if(player==1)
	printf("*----------* Congratulations, YOU WON! *----------*\n\n");

else
	printf("*----------* I WON! *----------*\n\n");



do{ 
	printf("Press '1' to play again, or '0' to quit.\n");
    scanf("%d",&x);
}while(x<0 || x>1);
return x;}}

//level 2n
int level2n(int p09)
	{int player = 0,l=0,p=0,x,y,z=0,c=0,i,n=0,m=0,k=0,a=0,h=0,r=0,t=0;
int winner = 0,s=0,w=0; 
int choice = 0; 
int row = 0; 
int column = 0; 
int line = 0; 
char board [3][3] = { 
{'1','2','3'}, 
{'4','5','6'}, 
{'7','8','9'} 
}; 
int EndGame=1; 

printf("You have X, I have O.\n\n");

printf("Board Positions:\n");


for (i = 0; i<9 && winner==0; i++) 
{ 
	printf("\n\n"); 
	printf(" %c | %c | %c\n", board[0][0], board[0][1], board[0][2]); 
	printf("---|---|---\n"); 
	printf(" %c | %c | %c\n", board[1][0], board[1][1], board[1][2]); 
	printf("---|---|---\n"); 
	printf(" %c | %c | %c\n", board[2][0], board[2][1], board[2][2]); 
	player = i%2 + 1; 


do 
{ if(player==2)
	{printf("\n\nMy move... \n");


if(i == 7)
{
	printf("I'm thinking, Please wait...\n");
	Sleep( 5000 ) ;
}

else
	Sleep( 2000 ) ;


for(x=0,c=0;x<3&&c==0;x++)
	{for(y=0;y<3&&c==0;y++)

if(board[0][0]=='O' && board[0][0]==board[0][1])
	{if(board[0][2]<='9')
	{board[0][2]='O';c++;}}
	
else if(board[0][2]=='O' && board[0][2]==board[0][1])
	{if(board[0][0]<='9')
	{board[0][0]='O';c++;}}
	
else if(board[1][0]=='O' && board[1][0]==board[1][1])
	{if(board[1][2]<='9')
	{board[1][2]='O';c++;}}	
	
else if(board[1][1]=='O' && board[1][1]==board[1][2])
	{if(board[1][0]<='9')
	{board[1][0]='O';c++;}}	
	
else if(board[0][1]=='O' && board[0][1]==board[1][1])
	{if(board[2][1]<'9')
	{board[2][1]='O';c++;}}	
	
else if(board[2][0]=='O' && board[2][0]==board[2][1])
	{if(board[2][2]<='9')
	{board[2][2]='O';c++;}}
	
else if(board[2][1]=='O' && board[2][1]==board[2][2])
	{if(board[2][0]<='9')
	{board[2][0]='O';c++;}}

else if(board[0][0]=='O' && board[0][0]==board[1][0])
	{if(board[2][0]<='9')
	{board[2][0]='O';c++;}}
			
else if(board[1][0]=='O' && board[1][0]==board[2][0])
	{if(board[0][0]<='9')
	{board[0][0]='O';c++;}}

else if(board[0][2]=='O' && board[0][2]==board[1][2])
	{if(board[2][2]<='9')
	{board[2][2]='O';c++;}}
	
else if(board[2][0]=='O' && board[2][0]==board[1][1])
	{if(board[0][2]<='9')
	{board[0][2]='O';c++;}}
	
else if(board[2][2]=='O' && board[2][2]==board[0][2])
	{if(board[1][1]<='9')
	{board[1][1]='O';c++;}}		

else if(board[0][0]=='O' && board[0][0]==board[0][2])
	{if(board[0][1]<='9')
	{board[0][1]='O';c++;}}	
	
else if(board[0][0]=='O' && board[0][0]==board[2][0])
	{if(board[1][0]<='9')
	{board[1][0]='O';c++;}}

else if(board[0][0]=='X' && board[0][0]==board[1][1] && z==0)
	{if(board[2][2]<='9')
	{board[2][2]='O';c++;}z++;}

else if(board[0][0]=='X' && board[0][0]==board[2][2] && l==0)
	{if(board[1][1]<'9')
	{board[1][1]='O';c++;}l++;}

else if(board[0][2]=='X' && board[0][2]==board[2][2] && n==0)
	{if(board[1][2]<'9')
	{board[1][2]='O';c++;}n++;}

else if(board[0][0]=='X' && m==0)
	{if(board[1][1]<='5')
	{board[1][1]='O';c++;}m++;}

else if(board[0][0]=='X' && board[0][0]==board[2][0] && k==0)
	{if(board[1][0]<'9')
	{board[1][0]='O';c++;}k++;}

else if(board[1][0]=='X' && board[1][0]==board[1][1] && a==0)
	{if(board[1][2]<'9')
	{board[1][2]='O';c++;}a++;}

else if(board[1][1]=='X' && board[2][2]==board[1][1] && s==0)
	{if(board[0][2]<'9')
	{board[0][2]='O';c++;}s++;}

else if(board[2][0]=='X' && board[2][0]==board[2][1] && r==0)
	{if(board[2][2]<='9')
	{board[2][2]='O';c++;}r++;}

else if(board[1][0]=='X' && board[1][0]==board[1][2] && t==0)
	{if(board[1][1]<='9')
	{board[1][1]='O';c++;}t++;}

else if(board[2][2]=='X' && board[2][2]==board[1][2] && w==0)
	{if(board[0][2]<='9')
	{board[0][2]='O';c++;}w++;}




else if(board[x][y]<'9')
{board[x][y]='O';
c++;}
}break;}
do{printf("\nYour move: "); 
scanf("%d", &choice);}while(choice<1 || choice>9);
row = --choice/3; 
column = choice%3; 
}while(choice<0 || choice>9 || board [row][column]>'9');
if(player==1)board[row][column]='X';
if((board[0][0]==board[1][1] && board[0][0]==board[2][2]) || (board[0][2]==board[1][1] && board[0][2]==board[2][0])) 
	winner = player;
else for(line = 0; line <=2; line++) 
if((board[line][0]==board[line][1] && board[line][0]==board[line][2])|| (board[0][line]==board[1][line] && board[0][line]==board[2][line])) 
winner = player; 
}
printf(" %c | %c | %c\n", board[0][0], board[0][1], board[0][2]); 
printf("---|---|---\n"); 
printf(" %c | %c | %c\n", board[1][0], board[1][1], board[1][2]); 
printf("---|---|---\n"); 
printf(" %c | %c | %c\n", board[2][0], board[2][1], board[2][2]); 

if(winner==0) 
	printf("*----------* DRAW! *----------*\n\n"); 

else if(player==1)
	printf("*----------* Congratulations, YOU WON! *----------*\n\n");

else
	printf("*----------* I WON! *----------*\n\n");



do{ 
	printf("Press '1' to play again, or '0' to quit.\n");
    scanf("%d",&x);
}while(x<0 || x>1);
return x;}


//Level 2
int Level2( int l2 , int n1)
{int player = 0,p,x,y,c=0,j=0,t=0,z,m=0,k=0,o=0,v=0,n,e=0,l,a,r,h;
int winner = 0,w=0,y3=0,i=0 ,c1=0,u=0,s; 
int choice = 0,y1=0,y2=0,choice1; 
int line = 0; 
char board [100][100]={ };
int EndGame=1;
if(n1==3)
level2n(n1);
else { 
printf("You have X, I have O.\n\n");

printf("Board Positions:\n");
for (i = 0,c1=0; i<n1*n1 && winner==0; i++) 
{ 
	printf("\n\n"); 
	for(x=0;x<n1;x++)
	{for(y=0;y<n1;y++,c1++)
		{printf(" %c |",board[x][y]);}printf("\n");
	for(y=0;y<n1;y++)
	printf("---|");
	printf("\n");
	}player = i%2 + 1; 


do 
{ if(player==2)
	{printf("\n\nMy move... \n");


if(i == 7)
{
	printf("I'm thinking, Please wait...\n");
	Sleep( 5000 ) ;
}

else
	Sleep( 2000 ) ;


for(x=0,c=0;x<n1&&c==0;x++)
	{for(y=0,m=0,y1=0;y<n1&&c==0;y++)
{
if(board[x][y]=='X')
	y1++;
}
	if(y1>=n1-1)
	{ for(y=0;y<n1&&m==0;y++){
	if(board[x][y]!='X' && board[x][y]!='O')
			m++;}
	if(m!=0)	
	{--y;
	board[x][y]='O';c++;}
}}
if(c==0)
{for(x=0,y=n1-1,y1=0;x<n1;x++,y--)
	{if(board[x][y]=='X')
		y1++;}
	if(y1>=n1-2)
	{{for(x=0,y=n1-1,m=0;x<n1&&m==0;x++,y--)
		{if(board[x][y]!='X' && board[x][y]!='O')
			m++;}}
	if(m!=0)
	{++y;--x;
	board[x][y]='O';c++;}
	}}

if(c==0)
	{for(x=0;x<n1&&c==0;x++)
		{for(y=0;y<n1&&c==0;y++)
			{if(board[x][y]!='X' && board[x][y]!='O')
				{board[x][y]='O';c++;}}}
c++;}
break;}				

do{printf("\nYour move: "); 
	printf("please enter ligne number: \n");
scanf("%d", &choice);}while(choice<0 || choice>n1-1);
do{	printf("please enter column number: ");
	scanf("%d",&choice1);}while(choice1<0 || choice1>n1-1);
}while(choice<0 || choice>n1-1 || board [choice][choice1]>'9');
if(player==1)board[choice][choice1]='X';
for(j=0,v=0;j<n1;j++,v++)
	{p=board[j][v];
	if(p==board[j][v])
		k++;}
		k--;
		if(k==n1)
winner = player;
else for(line = 0; line <n1&&w==0; line++)
		  {for(u=1,t=board[line][0],e=0;u<n1;u++)
		  	{
		  		if(t=='O' || t=='X')
		  	{if(t==board[line][u])
		  		e++;}}
				if(e==n1-1)
					w++;}
if(w!=0)						
winner = player;
else
{for(line = 0; line <n1&&w==0; line++)
		  {for(u=1,t=board[0][line],e=0;u<n1;u++)
		  	{
		  		if(t=='O' || t=='X')
		  	{if(t==board[u][line])
		  		e++;}}
				if(e==n1-1)
					w++;}
if(w!=0)						
winner = player;
}}
for(x=0;x<n1;x++)
	{for(y=0;y<n1;y++)
		{printf(" %c |",board[x][y]);}
		printf("\n");
		for(y=0;y<n1;y++)
	{printf("---|");}
	printf("\n");}

if(winner==0) 
	printf("*----------* DRAW! *----------*\n\n"); 

else if(player==1)
	printf("*----------* Congratulations, YOU WON! *----------*\n\n");

else
	printf("*----------* I WON! *----------*\n\n");



do{ 
	printf("Press '1' to play again, or '0' to quit.\n");
    scanf("%d",&x);
}while(x<0 || x>1);
return x;}}

//Level3n
int level3n(int p99)
	{int player = 0,l=0,p=0,x,y,z=0,c=0,i,f=0,n=0,m=0,k=0,o=0,v=0,a=0,b=0,h=0,r=0,e=0,q=0,t=0;
int winner = 0,s=0,w=0,g=0,j=0,u=0,u1=0,u2=0,y3=0,p1=0,p2=0; 
int choice = 0,x1=0,x2=0,x3=0,x4=0,x5=0,x6=0,x7=0,x8=0,x9=0,y1=0,y2=0; 
int row = 0; 
int column = 0; 
int line = 0; 
char board [3][3] = { 
{'1','2','3'}, 
{'4','5','6'}, 
{'7','8','9'} 
},x01=1;
int EndGame=1; 

printf("You have X, I have O.\n\n");

printf("Board Positions:\n");


for (i = 0; i<9 && winner==0; i++) 
{ 
	printf("\n\n"); 
	printf(" %c | %c | %c\n", board[0][0], board[0][1], board[0][2]); 
	printf("---|---|---\n"); 
	printf(" %c | %c | %c\n", board[1][0], board[1][1], board[1][2]); 
	printf("---|---|---\n"); 
	printf(" %c | %c | %c\n", board[2][0], board[2][1], board[2][2]); 
	player = i%2 + 1; 


do 
{ if(player==2)
	{printf("\n\nMy move... \n");


if(i == 7)
{
	printf("I'm thinking, Please wait...\n");
	Sleep( 5000 ) ;
}

else
	Sleep( 2000 ) ;


for(x=0,c=0;x<3&&c==0;x++)
	{for(y=0;y<3&&c==0;y++)

if(board[0][0]=='O' && board[0][0]==board[0][1]&& x1==0)
	{if(board[0][2]<='9')
	{board[0][2]='O';c++;}x1++;}
	
else if(board[0][2]=='O' && board[0][2]==board[0][1]&& x2==0)
	{if(board[0][0]<='9')
	{board[0][0]='O';c++;}x2++;}
	
else if(board[1][0]=='O' && board[1][0]==board[1][1]&& x3==0)
	{if(board[1][2]<='9')
	{board[1][2]='O';c++;}x3++;}	
	
else if(board[1][1]=='O' && board[1][1]==board[1][2]&& x4==0)
	{if(board[1][0]<='9')
	{board[1][0]='O';c++;}x4++;}	
	
else if(board[0][1]=='O' && board[0][1]==board[1][1]&& x5==0)
	{if(board[2][1]<'9')
	{board[2][1]='O';c++;}x5++;}	
	
else if(board[2][0]=='O' && board[2][0]==board[2][1]&& x6==0)
	{if(board[2][2]<='9')
	{board[2][2]='O';c++;}x6++;}
	
else if(board[2][1]=='O' && board[2][1]==board[2][2]&& x7==0)
	{if(board[2][0]<='9')
	{board[2][0]='O';c++;}x7++;}

else if(board[0][0]=='O' && board[0][0]==board[1][0]&& x8==0)
	{if(board[2][0]<='9')
	{board[2][0]='O';c++;}x8++;}
			
else if(board[1][0]=='O' && board[1][0]==board[2][0]&& x9==0)
	{if(board[0][0]<='9')
	{board[0][0]='O';c++;}x9++;}

else if(board[0][2]=='O' && board[0][2]==board[1][2]&& y1==0)
	{if(board[2][2]<='9')
	{board[2][2]='O';c++;}y1++;}
	
else if(board[2][0]=='O' && board[2][0]==board[1][1]&& y2==0)
	{if(board[0][2]<='9')
	{board[0][2]='O';c++;}y2++;}
	
else if(board[2][2]=='O' && board[2][2]==board[0][2]&& y3==0)
	{if(board[1][1]<='9')
	{board[1][1]='O';c++;}y3++;}		

else if(board[0][0]=='O' && board[0][0]==board[0][2] && p==0)
	{if(board[0][1]<='9')
	{board[0][1]='O';c++;}p++;}	
	
else if(board[0][0]=='O' && board[0][0]==board[2][0] && p1==0)
	{if(board[1][0]<='9')
	{board[1][0]='O';c++;}p1++;}
	
else if(board[0][0]=='X' && board[0][0]==board[1][1] && p==0)
	{if(board[2][2]<='9')
	{board[2][2]='O';c++;}p++;}
	
else if(board[0][1]=='X' && board[0][1]==board[0][2] && p2==0)
	{if(board[0][0]<='9')
	{board[0][0]='O';c++;}p2++;}	

else if(board[0][0]=='X' && board[0][0]==board[2][2] && l==0)
	{if(board[1][1]<'9')
	{board[1][1]='O';c++;}l++;}


else if(board[0][2]=='X' && board[0][2]==board[2][0] && f==0)
	{if(board[1][1]<'9')
	{board[1][1]='O';c++;}f++;}

else if(board[0][2]=='X' && board[0][2]==board[2][2] && n==0)
	{if(board[1][2]<'9')
	{board[1][2]='O';c++;}n++;}

else if(board[0][0]=='X' && m==0)
	{if(board[1][1]<='5')
	{board[1][1]='O';c++;}m++;}

else if(board[0][0]=='X' && board[0][0]==board[2][0] && k==0)
	{if(board[1][0]<'9')
	{board[1][0]='O';c++;}k++;}

else if(board[2][0]=='X' && board[2][0]==board[1][1] && o==0)
	{if(board[0][2]<'9')
	{board[0][2]='O';c++;}o++;}

else if(board[0][2]=='X' && v==0)
	{if(board[2][0]<='5')
	{board[2][0]='O';c++;}v++;}

else if(board[1][0]=='X' && board[1][0]==board[1][1] && a==0)
	{if(board[1][2]<'9')
	{board[1][2]='O';c++;}a++;}

else if(board[0][1]=='X' && board[0][1]==board[1][1] && b==0)
	{if(board[2][1]<='9')
	{board[2][1]='O';c++;}b++;}

else if(board[1][1]=='X' && board[2][2]==board[1][1] && s==0)
	{if(board[0][2]<'9')
	{board[0][2]='O';c++;}s++;}

else if(board[2][0]=='X' && board[2][0]==board[2][2] && h==0)
	{if(board[2][1]<'9')
	{board[2][1]='O';c++;}h++;}

else if(board[2][0]=='X' && board[2][0]==board[2][1] && r==0)
	{if(board[2][2]<='9')
	{board[2][2]='O';c++;}r++;}
	
else if(board[2][1]=='X' && board[2][2]==board[2][1] && r==0)
	{if(board[2][0]<='9')
	{board[2][0]='O';c++;}r++;}	

else if(board[2][1]=='X' && e==0)
	{if(board[1][1]<='9')
	{board[1][1]='O';c++;}e++;}

else if(board[0][1]=='X' && q==0)
	{if(board[1][1]<='5')
	{board[1][1]='O';c++;}q++;}


else if(board[1][0]=='X' && board[1][0]==board[1][2] && t==0)
	{if(board[1][1]<='9')
	{board[1][1]='O';c++;}t++;}

else if(board[2][2]=='X' && board[2][2]==board[1][2] && w==0)
	{if(board[0][2]<='9')
	{board[0][2]='O';c++;}w++;}

else if(board[0][2]=='X' && board[0][2]==board[1][1] && g==0)
	{if(board[2][0]<='9')
	{board[2][0]='O';c++;}g++;}

else if(board[0][2]=='X' && board[0][2]==board[1][2] && j==0)
	{if(board[2][2]<='9')
	{board[2][2]='O';c++;}j++;}

else if(board[1][1]=='X' && board[1][1]==board[1][2] && u==0)
	{if(board[1][0]<='9')
	{board[1][0]='O';c++;}u++;}
	
else if(board[0][0]=='X' && board[0][0]==board[1][0] && u1==0)
	{if(board[2][0]<='9')
	{board[2][0]='O';c++;}u1++;}	
	
else if(board[1][0]=='X' && board[1][0]==board[2][0] && u2==0)
	{if(board[0][1]<='9')
	{board[0][1]='O';c++;}u2++;}	


else if(board[x][y]<'9')
{board[x][y]='O';
c++;}
}break;}
do{printf("\nYour move: "); 
scanf("%d", &choice);}while(choice<1 || choice>9);
row = --choice/3; 
column = choice%3; 
}while(choice<0 || choice>9 || board [row][column]>'9');
if(player==1)board[row][column]='X';
if((board[0][0]==board[1][1] && board[0][0]==board[2][2]) || (board[0][2]==board[1][1] && board[0][2]==board[2][0])) 
	winner = player;
else for(line = 0; line <=2; line++) 
if((board[line][0]==board[line][1] && board[line][0]==board[line][2])|| (board[0][line]==board[1][line] && board[0][line]==board[2][line])) 
winner = player; 
}
printf(" %c | %c | %c\n", board[0][0], board[0][1], board[0][2]); 
printf("---|---|---\n"); 
printf(" %c | %c | %c\n", board[1][0], board[1][1], board[1][2]); 
printf("---|---|---\n"); 
printf(" %c | %c | %c\n", board[2][0], board[2][1], board[2][2]); 

if(winner==0) 
	printf("*----------* DRAW! *----------*\n\n"); 

else if(player==1)
	printf("*----------* Congratulations, YOU WON! %c *----------*\n\n",x01+1);

else
	printf("*----------* I WON! *----------*\n\n");



do{ 
	printf("Press '1' to play again, or '0' to quit.\n");
    scanf("%d",&x);
}while(x<0 || x>1);
return x;}



//Level 3
int Level3( int l3, int n1)
	{int player = 0,l=0,p=0,x,y,z=0,c=0,i,f=0,n=0,m=0,k=0,o=0,v=0,a=0,b=0,h=0,r=0,e=0,q=0,t=0;
int winner = 0,s=0,w=0,g=0,j=0,u=0,u1=0,u2=0,y3=0,p1=0,p2=0,c1; 
int choice = 0,choice1,x1=0,x2=0,x3=0,x4=0,x5=0,x6=0,x7=0,x8=0,x9=0,y1=0,y2=0; 
int line = 0; 
char board [100][100]={ };
int EndGame=1;
if(n1==3)
level3n(n1);
else{ 
printf("You have X, I have O.\n\n");

printf("Board Positions:\n");
for (i = 0,c1=0; i<n1*n1 && winner==0; i++) 
{ 
	printf("\n\n"); 
	for(x=0;x<n1;x++)
	{for(y=0;y<n1;y++,c1++)
		{printf(" %c |",board[x][y]);}printf("\n");
	for(y=0;y<n1;y++)
	printf("---|");
	printf("\n");
	}player = i%2 + 1; 


do 
{ if(player==2)
	{printf("\n\nMy move... \n");


if(i == 7)
{
	printf("I'm thinking, Please wait...\n");
	Sleep( 5000 ) ;
}

else
	Sleep( 2000 ) ;


for(x=0,c=0;x<n1&&c==0;x++)
	{for(y=0,m=0,y1=0;y<n1&&c==0;y++)
{
if(board[x][y]=='X')
	y1++;
}
	if(y1>=n1-1)
	{ for(y=0;y<n1&&m==0;y++){
	if(board[x][y]!='X' && board[x][y]!='O')
			m++;}
	if(m!=0)	
	{--y;
	board[x][y]='O';c++;}
}}
if(c==0)
for(x=0;x<n1&&c==0;x++)
   {for(y=0,m=0,y1=0;y<n1&&c==0;y++)
   		{if(board[y][x]=='X')
   			y1++;}
   	if(y1>=n1-2)
	{for(y=0;y<n1&&m==0;y++)
	if(board[y][x]!='X' && board[y][x]!='O')
			m++;}	
		if(m!=0)	
	{--y;
	board[y][x]='O';c++;}			
	}
if(c==0)
{for(x=0,y=0,y1=0;x<n1;x++,y++)
	{if(board[x][y]=='X')
		y1++;}
	if(y1>=n1-1)
	{{for(x=0,y=0,m=0;x<n1&&m==0;x++,y++)
		{if(board[x][y]!='X' && board[x][y]!='O')
			m++;}}
	if(m!=0)
	{--y;--x;
	board[x][y]='O';c++;}
}}
if(c==0)
{for(x=0,y=n1-1,y1=0;x<n1;x++,y--)
	{if(board[x][y]=='X')
		y1++;}
	if(y1>=n1-2)
	{{for(x=0,y=n1-1,m=0;x<n1&&m==0;x++,y--)
		{if(board[x][y]!='X' && board[x][y]!='O')
			m++;}}
	if(m!=0)
	{++y;--x;
	board[x][y]='O';c++;}
	}}

if(c==0)
	{for(x=0;x<n1&&c==0;x++)
		{for(y=0;y<n1&&c==0;y++)
			{if(board[x][y]!='X' && board[x][y]!='O')
				{board[x][y]='O';c++;}}}
c++;}
break;}				

do{printf("\nYour move: "); 
	printf("please enter ligne number: \n");
scanf("%d", &choice);}while(choice<0 || choice>n1-1);
do{	printf("please enter column number: ");
	scanf("%d",&choice1);}while(choice1<0 || choice1>n1-1);
}while(choice<0 || choice>n1-1 || board [choice][choice1]>'9');
if(player==1)board[choice][choice1]='X';
for(j=0,v=0;j<n1;j++,v++)
	{p=board[j][v];
	if(p==board[j][v])
		k++;}
		k--;
		if(k==n1)
winner = player;
else for(line = 0; line <n1&&w==0; line++)
		  {for(u=1,t=board[line][0],e=0;u<n1;u++)
		  	{
		  		if(t=='O' || t=='X')
		  	{if(t==board[line][u])
		  		e++;}}
				if(e==n1-1)
					w++;}
if(w!=0)						
winner = player;
else
{for(line = 0; line <n1&&w==0; line++)
		  {for(u=1,t=board[line][0],e=0;u<n1;u++)
		  	{
		  		if(t=='O' || t=='X')
		  	{if(t==board[u][line])
		  		e++;}}
				if(e==n1-1)
					w++;}
if(w!=0)						
winner = player;
}}
for(x=0;x<n1;x++)
	{for(y=0;y<n1;y++)
		{printf(" %c |",board[x][y]);}
		printf("\n");
		for(y=0;y<n1;y++)
	{printf("---|");}
	printf("\n");}

if(winner==0) 
	printf("*----------* DRAW! *----------*\n\n"); 

else if(player==1)
	printf("*----------* Congratulations, YOU WON! *----------*\n\n");

else
	printf("*----------* I WON! *----------*\n\n");



do{ 
	printf("Press '1' to play again, or '0' to quit.\n");
    scanf("%d",&x);
}while(x<0 || x>1);
return x;}}

int main() 
{ 

	int n1, level,start;

do{	printf("\n\n--------------------* Welcome to TicTacToe Game *--------------------\n");
printf("---* Designed by: Elie Fares, Miled El Kareh & Angelo Maalouf *---\n\n");


printf("Choose game level: 1-Easy  2-Medium  3-Hard (Or press '0' to quit)\n\n");
scanf("%d",&level);
do{printf("Enter the size: ");
scanf("%d",&n1);
}while(n1<3 || n1%2==0);
switch(level)
{
case 0: break;
case 1: start=Level1(level,n1);	break;
case 2: start=Level2(level,n1);	break;
case 3: start=Level3(level,n1);	break;
default:start=1;break; 
}
printf("\n\n\n");

if(level==0)
	start=0;

}while(start==1);


 
getch();
}
